@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin linear-gradient-text {
    background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
    background-clip: text;
    -webkit-background-clip: text;
    -moz-background-clip: text;
    color: transparent;
}

@mixin center-position {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/*
Media Query

0 - 600px       Phone
600 - 900px     Tablet Portrait
900 - 1200px    Tablet Landscape
1200 - 1800px   Desktop
1800px ->       Big Desktop

$breakpoint argument shortcude
- phone
- phone-land
- tab
- tab-land
- big-desktop

1em = 16px
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        // 100px - 600px
        @media (min-width: 6.25em) and (max-width: 37.5em) {
            @content
        };
    }

    @if $breakpoint == phone-land {
        // 481px - 767px
        @media (min-width: 30.0625em) and (max-width: 47.9375em) {
            @content;
        };
    }

    @if $breakpoint == tab {
        // 601px - 1024px
        @media (min-width: 37.5625em) and (max-width: 64em) {
            @content
        };
    }

    @if $breakpoint == tab-land {
        // 768 - 1024
        @media (min-width: 48em) and (max-width: 64em) and (orientation: landscape) {
            @content
        };
    }

    @if $breakpoint == big-desktop {
        // 1800
        @media (min-width: 112.5em) {
            @content
        };
    }

    // Phone and Tab
    @if $breakpoint == phone-tab {
        @media (min-width: 6.25em) and (max-width: 64em) {
            @content
        };
    }

    @if $breakpoint == phone-tab-land {
        @media (min-width: 30.0625em) and (max-width: 64em) and (orientation: landscape) {
            @content
        };
    }
}